# -*- coding: utf-8 -*-
"""IAI.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1b_y4IzDI7tvvYrAPMhD7QYSfvP9xpK4n
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
# %matplotlib inline

df = pd.read_csv('/content/Reviews.csv')

df.head()

df.shape

df.info()

df.Summary.head()

df.Text.head()

!pip install textblob

from nltk.corpus import stopwords
from textblob import TextBlob
from textblob import Word
# Lower casing and removing punctuations

df['Text'] = df['Text'].apply(lambda x: " ".join(x.lower() for
x in x.split()))

df['Text'] = df['Text'].str.replace('[^\w\s]', "")
df.Text.head(5)

string = "yoo the food was delicious "

print(string.replace("delicious", "Yummy"))

stop = stopwords.words('english')
df['Text'] = df['Text'].apply(lambda x: " ".join(x for x in
x.split() if x not in stop))
df.Text.head()

import nltk
nltk.download('wordnet')

df['Text'] = df['Text'].apply(lambda x: " ".join([Word(word).lemmatize() for word in x.split()]))
df.Text.head()

! pip install wordcloud

from wordcloud import WordCloud
from wordcloud import STOPWORDS

df.columns

df.Score.value_counts()

import seaborn as sns

sns.countplot(data = df, x = 'Score')

reviews = df

reviews.dropna(inplace=True)

score_1 = reviews[reviews['Score'] == 1]
score_2 = reviews[reviews['Score'] == 2]
score_3 = reviews[reviews['Score'] == 3]
score_4 = reviews[reviews['Score'] == 4]
score_5 = reviews[reviews['Score'] == 5]

reviews_sample = pd.concat([score_1,score_2,score_3,score_4,score_5],axis=0)
reviews_sample.reset_index(drop=True,inplace=True)

reviews_str = reviews_sample.Summary.str.cat()
wordcloud = WordCloud(background_color='white').generate(reviews_str)
plt.figure(figsize=(10,10))
plt.imshow(wordcloud,interpolation='bilinear')
plt.axis("off")
plt.show()

negative_reviews = reviews_sample[reviews_sample['Score'].isin([1,2]) ]
positive_reviews = reviews_sample[reviews_sample['Score'].isin([4,5]) ]
negative_reviews_str = negative_reviews.Summary.str.cat()
positive_reviews_str = positive_reviews.Summary.str.cat()

wordcloud_negative = WordCloud(background_color='white').generate(negative_reviews_str)
wordcloud_positive = WordCloud(background_color='black').generate(positive_reviews_str)
# Plot
fig = plt.figure(figsize=(10,10))
ax1 = fig.add_subplot(211)
ax1.imshow(wordcloud_negative,interpolation='bilinear')
ax1.axis("off")
ax1.set_title('Reviews with Negative Scores',fontsize=20)

fig = plt.figure(figsize=(10,10))
ax2 = fig.add_subplot(212)
ax2.imshow(wordcloud_positive,interpolation='bilinear')
ax2.axis("off")
ax2.set_title('Reviews with Positive Scores',fontsize=20)
plt.show()

!pip install vaderSentiment

import seaborn as sns
import re
import os
import sys
import ast

plt.style.use('fivethirtyeight')
cp = sns.color_palette()
from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer
analyzer = SentimentIntensityAnalyzer()

emptyline=[]
for row in df['Text']:

    vs=analyzer.polarity_scores(row)
    emptyline.append(vs)

df_sentiments=pd.DataFrame(emptyline)
df_sentiments.head()

df_c = pd.concat([df.reset_index(drop=True), df_sentiments], axis=1)
df_c.head(3)

df_c['Sentiment'] = np.where(df_c['compound'] >= 0 , 'Positive','Negative')
df_c.head(5)

result=df_c['Sentiment'].value_counts()
result.plot(kind='bar', rot=0, color=['plum','cyan']);